[auth]
username=<un>
password=<pwd>

[sys]
logfilepath=../log

[stream]
# stream
streamurl=https://gnip-stream.twitter.com/stream/powertrack/accounts/<account name>/publishers/twitter/<stream>.json
streamname=<name the stream, this shows up in filenames later>
filepath=../<where your data should go>
compressed=True

[db]
# note: the SQL interface library being used here does not support Python3, fix outstanding
sql_instance=<mysqldb host string>
sql_user_name=<un>
sql_password=<pwd>
sql_db=MetricsDB

[gnacs]
# note: as of right now, GNACS will not be upgraded to support python 3
options=gulist
delim=|

[proc]
rollduration=60

#
# NOTE: processtype can be a single value or a comma-separated list of any of the values shown below: 
# e.g. 
processtype=files,rules
# processtype=files-gnacs

# sample stream for latency measurements
# this processtype is python 2&3 compatible
#processtype=latency

# print out rule production rates
# this processtype is python 2&3 compatible
#processtype=rules

# store stream contents in files by year, month, day, hour, min
# this processtype is python 2&3 compatible
#processtype=files

# as above, but parse output with Gnacs before writing
# no plans to upgrade GNACS to python 3, this processtype is not python 3 compatible
#processtype=files-gnacs

# example of a custom processing class
# this processtype is python 2&3 compatible
#processtype=SaveCustomLikeCSV

# store stream contents in redis
# this processtype is python 2&3 compatible
#processtype=redis

# store stream contents in redis
# this processtype is python 2&3 compatible
#processtype=fileandmetrics
